amqp-host: ${AMQP_HOST:localhost}
amqp-port: ${AMQP_PORT:5672}
amqp-username: ${AMQP_USERNAME:artemis}
amqp-password: ${AMQP_PASSWORD:artemis}
kafka:
  bootstrap:
    servers:
      - localhost:9092
quarkus:
  http:
    test-port: 0
    test-ssl-port: 0
  datasource:
    db-kind: postgresql
    username: ${DB_USER:app_customer}
    password: ${DB_PASSWORD:app_customer}
    jdbc:
      url: jdbc:postgresql://${DB_HOST:localhost:15432}/${DB_DATABASE:app_customer}
      max-size: 8
      min-size: 2
  jaeger:
    enabled: true
    endpoint: ${TRACING_ENDPOINT:http://localhost:14268/api/traces}
    sampler-type: const
    sampler-param: 1
    service-name: customer-service
mp:
  messaging:
    outgoing:
      jms-new-customer-channel:
        connector: smallrye-amqp
        durable: true
        use-anonymous-sender: false
    incoming:
      kafka-new-order-channel:
        connector: smallrye-kafka
        topic: kafka-new-order-channel
        interceptor:
          classes:
            - io.opentracing.contrib.kafka.TracingConsumerInterceptor
        value:
          deserializer: de.consol.customer.boundary.messaging.kafka.incoming.CreateOrderDeserializer